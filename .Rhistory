#read in downloads from iNat
before <- read_csv("before_ids_edits.csv")
library(tidyverse)
library(dplyr)
library(tidyverse)
library(dplyr)
#read in downloads from iNat
before <- read_csv("before_ids_edits.csv")
#read in downloads from iNat
before <- read_csv("data/before_ids_edits.csv")
after <- read_csv("data/after_ids_edits.csv")
View(after)
#we're interested in the after updated column so I can tell which obs were reviewed, but I don't want the time, only date
after$updated_at <- substr(after$updated_at, 1, 10)
View(after)
#I need to combine the before and after, as some obs from the start were made casual or bumped out through obscuration and thus get lost from the after
combined<-dplyr::full_join(before, after, by = "id")
#now let's find these lost records so I can individually inspect them
bumped <- combined %>%
filter(is.na(quality_grade.y))
new <- combined %>%
filter(is.na(quality_grade.x))
#aside, just checking if there are any rows in combined df where every cell in the row is NA (there shouldn't be)
na_rows <- combined[rowSums(is.na(combined)) == ncol(combined), ]
#now load back in edited file
combined_edited <- read_csv("data/combined_data_edited.csv")
#check for all na rows
na_rows_edited <- combined_edited[rowSums(is.na(combined_edited)) == ncol(combined_edited), ]
Kalbarri <- combined_edited[combined_edited$latitude_before > -28.866 & combined_edited$latitude_before < -25.5, ]
#check for all na rows
na_rows_k <- Kalbarri[rowSums(is.na(Kalbarri)) == ncol(Kalbarri), ]
Kalbarri2 <- Kalbarri[!is.na(Kalbarri$grade_after), ]
bumped_kalbarri <- read_csv("data/bumped_kalbarri_only.csv")
#bind these to the Kalbarri file
pre_KU<-dplyr::bind_rows(Kalbarri2, bumped_kalbarri)
#so this gives us 4506 to play with for Kalbarri. Of these, how many were updated during the event (event started 2024-02-12)
KU <- pre_KU %>% filter(updated_after > as.Date("2024-02-11"))
KU_species <- KU %>% filter(!is.na(species_before))
#now how many of these were confirmed as correct at species level, ie started at species rank and species name remained the same
KU_species2 <- KU_species %>% filter(species_before == species_after)
KU_species_RG<- KU_species %>% filter(grade_before == "research")
KU_species_RG2<- KU_species_RG %>% filter(species_before == species_after)
KU_species_NEED<- KU_species %>% filter(grade_before == "needs_id")
KU_species_NEED2<- KU_species_NEED %>% filter(species_before == species_after)
#for ones that were needs ID at species, 941/1039 were correct, 90.6%.
#however, there were actually 3 records that didn't get updated via an added ID by another user, need to account for these in these stats
#all 3 were Needs ID, and not updated, so I want to remove these from the KU file, and then redo the above stats. So updated was actually 2651/4506 (58.8%)
KU <- KU[-c(1091, 2056, 821), ]
KU_species <- KU %>% filter(!is.na(species_before))
#now how many of these were confirmed as correct at species level, ie started at species and species remained the same
KU_species2 <- KU_species %>% filter(species_before == species_after)
KU_species_RG<- KU_species %>% filter(grade_before == "research")
KU_species_RG2<- KU_species_RG %>% filter(species_before == species_after)
KU_species_NEED<- KU_species %>% filter(grade_before == "needs_id")
KU_species_NEED2<- KU_species_NEED %>% filter(species_before == species_after)
#now we get to some new code again
#of the updated records, how many started at species, and how many finished at species?
species_before <- sum(complete.cases(KU[["species_before"]]))
species_after <- sum(complete.cases(KU[["species_after"]]))
#similarly how many started/finished at RG?
RG_before <- sum(KU[["grade_before"]] == "research")
RG_after <- sum(KU[["grade_after"]] == "research")
unique_df1 <- KU %>%
distinct(species_before, .keep_all = TRUE)
unique_df2 <- KU %>%
distinct(species_after, .keep_all = TRUE)
#remove the NA row in each
unq1 <- dplyr::select(unique_df1, species_before)
unq1 <- unq1[-4, ]
unq2 <- dplyr::select(unique_df2, species_after)
unq2 <- unq2[-2, ]
unq2 <- unq2 %>%
rename(species_before = species_after)
merged_unq <- merge(unq1, unq2, by = "species_before")
#let's have a look at updated records that started at species, but that ID was wrong (ended up different species or coarser ID)
wrong <- KU_species %>%
filter(species_before != species_after | is.na(species_after))
#so some more amendments to stats to be made here
#first though let's remove these from the wrong df
wrong <- wrong[-c(35,83,102,111), ]
Lesueur <- combined_edited[combined_edited$latitude_before > -30.883 & combined_edited$latitude_before < -29.979, ]
#check for all na rows
na_rows_L <- Lesueur[rowSums(is.na(Lesueur)) == ncol(Lesueur), ]
Lesueur2 <- Lesueur[!is.na(Lesueur$grade_after), ]
#For Lesueur it's 29 records that need to be appended after getting bumped
bumped_lesueur <- read_csv("data/bumped_lesueur_only.csv")
#bind these to the Lesueur file
pre_LS <-dplyr::bind_rows(Lesueur2, bumped_lesueur)
#so this gives us 5867 to play with for Lesueur. Of these, how many were updated during the event
LS <- pre_LS %>% filter(updated_after > as.Date("2024-02-11"))
LS_species <- LS %>% filter(!is.na(species_before))
#now how many of these were confirmed as correct at species level, ie started at species and species remained the same
LS_species2 <- LS_species %>% filter(species_before == species_after)
LS_species_RG<- LS_species %>% filter(grade_before == "research")
LS_species_RG2<- LS_species_RG %>% filter(species_before == species_after)
LS_species_NEED<- LS_species %>% filter(grade_before == "needs_id")
LS_species_NEED2<- LS_species_NEED %>% filter(species_before == species_after)
#so we need to make some changes here. First, 10 need to be removed from the updated pool, so it's 3606/5867 = 61.5%
LS <- LS[-c(336,398,1056,2791,1288,1313,1321,3017,1320,2720), ]
#and then amend the cell value for the other one
LS[396, 2] <- "research"
LS[396, 21] <- "research"
LS_species <- LS %>% filter(!is.na(species_before))
#now how many of these were confirmed as correct at species level, ie started at species and species remained the same
LS_species2 <- LS_species %>% filter(species_before == species_after)
LS_species_RG<- LS_species %>% filter(grade_before == "research")
LS_species_RG2<- LS_species_RG %>% filter(species_before == species_after)
LS_species_NEED<- LS_species %>% filter(grade_before == "needs_id")
LS_species_NEED2<- LS_species_NEED %>% filter(species_before == species_after)
#now we get to some new code again
#of the updated records, how many started at species, and how many finished at species?
species_before_LS <- sum(complete.cases(LS[["species_before"]]))
species_after_LS <- sum(complete.cases(LS[["species_after"]]))
#similarly how many started/finished at RG?
RG_before_LS <- sum(LS[["grade_before"]] == "research")
RG_after_LS <- sum(LS[["grade_after"]] == "research")
unique_df3 <- LS %>%
distinct(species_before, .keep_all = TRUE)
unique_df4 <- LS %>%
distinct(species_after, .keep_all = TRUE)
#remove the NA row in each
unq3 <- dplyr::select(unique_df3, species_before)
unq3 <- unq3[-1, ]
unq4 <- dplyr::select(unique_df4, species_after)
unq4 <- unq4[-20, ]
unq4 <- unq4 %>%
rename(species_before = species_after)
merged_unq2 <- merge(unq3, unq4, by = "species_before")
#let's have a look at updated records that started at species, but that ID was wrong (ended up different species or coarser ID)
wrong2 <- LS_species %>%
filter(species_before != species_after | is.na(species_after))
#so some more amendments to stats to be made here!
#first though, let's remove these from the wrong df
wrong2 <- wrong2[-c(50,51,54,58,59,72,76,79,81,88,93,101,106,107,110,154,156), ]
#remove the two non-reviewed ones from the reviewed file
LS <- LS[-c(1481,2525), ]
LS_species <- LS %>% filter(!is.na(species_before))
#now how many of these were confirmed as correct at species level, ie started at species and species remained the same
LS_species2 <- LS_species %>% filter(species_before == species_after)
LS_species_RG<- LS_species %>% filter(grade_before == "research")
LS_species_RG2<- LS_species_RG %>% filter(species_before == species_after)
LS_species_NEED<- LS_species %>% filter(grade_before == "needs_id")
LS_species_NEED2<- LS_species_NEED %>% filter(species_before == species_after)
#of the updated records, how many started at species, and how many finished at species?
species_before_LS <- sum(complete.cases(LS[["species_before"]]))
species_after_LS <- sum(complete.cases(LS[["species_after"]]))
#similarly how many started/finished at RG?
RG_before_LS <- sum(LS[["grade_before"]] == "research")
RG_after_LS <- sum(LS[["grade_after"]] == "research")
Fitzgerald <- combined_edited[combined_edited$latitude_before > -35.042 & combined_edited$latitude_before < -32.461, ]
#check for all na rows
na_rows_L <- Fitzgerald[rowSums(is.na(Fitzgerald)) == ncol(Fitzgerald), ]
Fitzgerald2 <- Fitzgerald[!is.na(Fitzgerald$grade_after), ]
#For Fitzgerald it's 3 records that need to be appended after getting bumped
bumped_fitzgerald <- read_csv("bumped_fitzgerald_only.csv")
#For Fitzgerald it's 3 records that need to be appended after getting bumped
bumped_fitzgerald <- read_csv("data/bumped_fitzgerald_only.csv")
#bind these to the Fitzgerald file
pre_FG <-dplyr::bind_rows(Fitzgerald2, bumped_fitzgerald)
#so this gives us 10908 to play with for Fitzgerald. Of these, how many were updated during the event
FG <- pre_FG %>% filter(updated_after > as.Date("2024-02-11"))
FG_species <- FG %>% filter(!is.na(species_before))
#now how many of these were confirmed as correct at species level, ie started at species and species remained the same
FG_species2 <- FG_species %>% filter(species_before == species_after)
FG_species_RG<- FG_species %>% filter(grade_before == "research")
FG_species_RG2<- FG_species_RG %>% filter(species_before == species_after)
FG_species_NEED<- FG_species %>% filter(grade_before == "needs_id")
FG_species_NEED2<- FG_species_NEED %>% filter(species_before == species_after)
#so we need to make some changes here. First, 18 need to be removed from the updated pool, so it's 4697/10908 = 43.1%
FG <- FG[-c(867,906,927,931,951,1237,1396,1516,1648,2180,2706,2754,3003,3031,3355,4002,4264,4420), ]
FG_species <- FG %>% filter(!is.na(species_before))
#now how many of these were confirmed as correct at species level, ie started at species and species remained the same
FG_species2 <- FG_species %>% filter(species_before == species_after)
FG_species_RG<- FG_species %>% filter(grade_before == "research")
FG_species_RG2<- FG_species_RG %>% filter(species_before == species_after)
FG_species_NEED<- FG_species %>% filter(grade_before == "needs_id")
FG_species_NEED2<- FG_species_NEED %>% filter(species_before == species_after)
#now we get to some new code again
#of the updated records, how many started at species, and how many finished at species?
species_before_FG <- sum(complete.cases(FG[["species_before"]]))
species_after_FG <- sum(complete.cases(FG[["species_after"]]))
#similarly how many started/finished at RG?
RG_before_FG <- sum(FG[["grade_before"]] == "research")
RG_after_FG <- sum(FG[["grade_after"]] == "research")
unique_df5 <- FG %>%
distinct(species_before, .keep_all = TRUE)
unique_df6 <- FG %>%
distinct(species_after, .keep_all = TRUE)
#remove the NA row in each
unq5 <- dplyr::select(unique_df5, species_before)
unq5 <- unq5[-1, ]
unq6 <- dplyr::select(unique_df6, species_after)
unq6 <- unq6[-19, ]
unq6 <- unq6 %>%
rename(species_before = species_after)
merged_unq3 <- merge(unq5, unq6, by = "species_before")
#let's have a look at updated records that started at species, but that ID was wrong (ended up different species or coarser ID)
wrong3 <- FG_species %>%
filter(species_before != species_after | is.na(species_after))
#so some more amendments to stats to be made here
#first though, let's remove these from the wrong df
wrong3 <- wrong3[-c(169,194,224,230), ]
#first, combine the 3 'before' unique species df
gsb <- dplyr::bind_rows(unq1, unq3, unq5)
gsb2 <-dplyr::distinct(gsb)
#then after
gsb3 <- dplyr::bind_rows(unq2, unq4, unq6)
gsb4 <-dplyr::distinct(gsb3)
#shared step
merged_unq4 <- merge(gsb2, gsb4, by = "species_before")
View(gsb3)
